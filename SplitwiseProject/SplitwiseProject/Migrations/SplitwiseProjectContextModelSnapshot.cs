// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SplitwiseProject.Models;

namespace SplitwiseProject.Migrations
{
    [DbContext(typeof(SplitwiseProjectContext))]
    partial class SplitwiseProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SplitwiseProject.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId");

                    b.Property<string>("ActivityName");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Balance", b =>
                {
                    b.Property<int>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BalanceAmount");

                    b.Property<int?>("FriendsId");

                    b.Property<int?>("UserId");

                    b.HasKey("BalanceId");

                    b.HasIndex("FriendsId");

                    b.HasIndex("UserId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Bill", b =>
                {
                    b.Property<int>("BillId");

                    b.Property<int>("BillAmount");

                    b.Property<int?>("BillCatagoryId");

                    b.Property<string>("BillCatagoryName");

                    b.Property<DateTime>("BillDate");

                    b.Property<string>("BillImage");

                    b.Property<string>("BillName");

                    b.Property<string>("BillNote");

                    b.Property<int?>("ReminderId");

                    b.Property<string>("ReminderNmae");

                    b.Property<int?>("RepeatsId");

                    b.Property<string>("RepeatsName");

                    b.Property<int?>("UserId");

                    b.HasKey("BillId");

                    b.HasIndex("BillCatagoryId");

                    b.HasIndex("ReminderId");

                    b.HasIndex("RepeatsId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SplitwiseProject.Models.BillCatagory", b =>
                {
                    b.Property<int>("BillCatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillCatagoryName");

                    b.Property<int?>("CatagoryOptionId");

                    b.Property<string>("CatagoryOptionName");

                    b.HasKey("BillCatagoryId");

                    b.HasIndex("CatagoryOptionId");

                    b.ToTable("BillCatagories");
                });

            modelBuilder.Entity("SplitwiseProject.Models.CatagoryOption", b =>
                {
                    b.Property<int>("CatagoryOptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatagoryOptionName");

                    b.HasKey("CatagoryOptionId");

                    b.ToTable("CatagoryOptions");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Friends", b =>
                {
                    b.Property<int>("FriendsId");

                    b.Property<string>("FriendEmail");

                    b.Property<string>("FriendName");

                    b.HasKey("FriendsId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName");

                    b.Property<int?>("SharedId");

                    b.HasKey("GroupId");

                    b.HasIndex("SharedId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Owes", b =>
                {
                    b.Property<int>("OwesId");

                    b.Property<int?>("FriendsId");

                    b.Property<int>("OwesAmmount");

                    b.HasKey("OwesId");

                    b.HasIndex("FriendsId");

                    b.ToTable("Owes");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId");

                    b.Property<int>("PaymentReceive");

                    b.Property<int>("Paymentmade");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("SplitwiseProject.Models.PaymentMode", b =>
                {
                    b.Property<int>("PaymentModeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayMode");

                    b.HasKey("PaymentModeId");

                    b.ToTable("PaymentModes");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReminderName");

                    b.HasKey("ReminderId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Repeats", b =>
                {
                    b.Property<int>("RepeatsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RepeatsName");

                    b.HasKey("RepeatsId");

                    b.ToTable("Repeats");
                });

            modelBuilder.Entity("SplitwiseProject.Models.SattleUp", b =>
                {
                    b.Property<int>("SattleUpId");

                    b.Property<int>("PaymentModeId");

                    b.Property<int>("SattleAmount");

                    b.HasKey("SattleUpId");

                    b.HasIndex("PaymentModeId");

                    b.ToTable("SattleUps");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Shared", b =>
                {
                    b.Property<int>("SharedId");

                    b.Property<int>("SharedAmmount");

                    b.HasKey("SharedId");

                    b.ToTable("Shareds");
                });

            modelBuilder.Entity("SplitwiseProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailId");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Activity", b =>
                {
                    b.HasOne("SplitwiseProject.Models.User")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseProject.Models.Balance", b =>
                {
                    b.HasOne("SplitwiseProject.Models.Friends", "Friends")
                        .WithMany()
                        .HasForeignKey("FriendsId");

                    b.HasOne("SplitwiseProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Bill", b =>
                {
                    b.HasOne("SplitwiseProject.Models.BillCatagory", "BillCatagory")
                        .WithMany()
                        .HasForeignKey("BillCatagoryId");

                    b.HasOne("SplitwiseProject.Models.Group")
                        .WithMany("Bills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SplitwiseProject.Models.Reminder", "Reminder")
                        .WithMany()
                        .HasForeignKey("ReminderId");

                    b.HasOne("SplitwiseProject.Models.Repeats", "Repeats")
                        .WithMany()
                        .HasForeignKey("RepeatsId");

                    b.HasOne("SplitwiseProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SplitwiseProject.Models.BillCatagory", b =>
                {
                    b.HasOne("SplitwiseProject.Models.CatagoryOption", "CatagoryOption")
                        .WithMany()
                        .HasForeignKey("CatagoryOptionId");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Friends", b =>
                {
                    b.HasOne("SplitwiseProject.Models.Group")
                        .WithMany("Friends")
                        .HasForeignKey("FriendsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseProject.Models.Group", b =>
                {
                    b.HasOne("SplitwiseProject.Models.Shared", "Shared")
                        .WithMany()
                        .HasForeignKey("SharedId");
                });

            modelBuilder.Entity("SplitwiseProject.Models.Owes", b =>
                {
                    b.HasOne("SplitwiseProject.Models.Friends", "Friends")
                        .WithMany()
                        .HasForeignKey("FriendsId");

                    b.HasOne("SplitwiseProject.Models.Bill")
                        .WithMany("Owes")
                        .HasForeignKey("OwesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SplitwiseProject.Models.User")
                        .WithMany("Owes")
                        .HasForeignKey("OwesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseProject.Models.Payment", b =>
                {
                    b.HasOne("SplitwiseProject.Models.Friends")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SplitwiseProject.Models.User")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseProject.Models.SattleUp", b =>
                {
                    b.HasOne("SplitwiseProject.Models.PaymentMode", "PaymentMode")
                        .WithMany()
                        .HasForeignKey("PaymentModeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SplitwiseProject.Models.User")
                        .WithMany("SattleUps")
                        .HasForeignKey("SattleUpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseProject.Models.Shared", b =>
                {
                    b.HasOne("SplitwiseProject.Models.User")
                        .WithMany("Shareds")
                        .HasForeignKey("SharedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
